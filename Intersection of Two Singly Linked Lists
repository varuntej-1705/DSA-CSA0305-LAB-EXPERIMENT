#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* newNode(int data) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->data = data;
    node->next = NULL;
    return node;
}

int getLength(struct Node* head) {
    int len = 0;
    while (head) {
        len++;
        head = head->next;
    }
    return len;
}

struct Node* getIntersection(struct Node* head1, struct Node* head2) {
    int len1 = getLength(head1);
    int len2 = getLength(head2);
    int diff = (len1 > len2) ? len1 - len2 : len2 - len1;

    if (len1 > len2)
        for (int i = 0; i < diff; i++) head1 = head1->next;
    else
        for (int i = 0; i < diff; i++) head2 = head2->next;

    while (head1 && head2) {
        if (head1 == head2) return head1;
        head1 = head1->next;
        head2 = head2->next;
    }
    return NULL;
}

int main() {
    struct Node* newNode1;
    struct Node* head1 = newNode(10);
    head1->next = newNode(20);
    newNode1 = newNode(30);
    head1->next->next = newNode1;
    newNode1->next = newNode(40);
    newNode1->next->next = newNode(50);

    struct Node* head2 = newNode(15);
    head2->next = newNode1;  // intersection at 30

    struct Node* intersect = getIntersection(head1, head2);
    if (intersect) printf("Intersection at node with value %d\n", intersect->data);
    else printf("No intersection\n");

    return 0;
}
